@page "/referencetables/{TableName}"
@using GetFitterGetBigger.Admin.Services
@using GetFitterGetBigger.Admin.Components.Shared
@using Microsoft.AspNetCore.Authorization
@inject ITableComponentRegistry TableComponentRegistry
@inject NavigationManager Navigation
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>@DisplayName - GetFitterGetBigger Admin</PageTitle>

<div>
    <div class="mb-4">
        <Breadcrumb Items="@breadcrumbItems" />
    </div>

    @if (_tableComponent != null)
    {
        <DynamicComponent Type="@_tableComponent" Parameters="@_componentParameters" />
    }
    else
    {
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">Table not found</h3>
                <p class="mt-1 text-sm text-gray-500">No component registered for table '@TableName'.</p>
                <button @onclick="NavigateBack" 
                        class="mt-4 px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700">
                    Back to Reference Tables
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string TableName { get; set; } = string.Empty;

    private Type? _tableComponent;
    private Dictionary<string, object> _componentParameters = new();
    private string DisplayName => TableComponentRegistry.GetDisplayName(TableName);
    private List<Breadcrumb.BreadcrumbItem> breadcrumbItems = new();

    protected override void OnParametersSet()
    {
        _tableComponent = TableComponentRegistry.GetComponentType(TableName);
        // Only pass TableName parameter to GenericReferenceTable
        if (_tableComponent == typeof(Components.Pages.ReferenceTableComponents.GenericReferenceTable))
        {
            _componentParameters = new Dictionary<string, object>
            {
                ["TableName"] = TableName
            };
        }
        else
        {
            _componentParameters = new Dictionary<string, object>();
        }
        
        // Update breadcrumb
        breadcrumbItems = new List<Breadcrumb.BreadcrumbItem>
        {
            new() { Text = "Home", Href = "/" },
            new() { Text = "Reference Tables", Href = "/referencetables" },
            new() { Text = DisplayName }
        };
    }
    
    private void NavigateBack()
    {
        Navigation.NavigateTo("/referencetables");
    }
}