@* Reusable error alert component with optional retry functionality *@

<div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4" role="alert">
    <div class="flex items-start">
        <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
        </div>
        <div class="ml-3 flex-1">
            <p class="text-sm font-medium">@ErrorMessage</p>
            @if (!string.IsNullOrEmpty(Details))
            {
                <p class="mt-1 text-sm text-red-600">@Details</p>
            }
        </div>
        <div class="ml-3 flex-shrink-0">
            @if (OnRetry.HasDelegate)
            {
                <button @onclick="HandleRetry" 
                        class="inline-flex items-center px-3 py-1 border border-red-300 text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                        data-testid="@RetryTestId">
                    <svg class="h-4 w-4 mr-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    Retry
                </button>
            }
            @if (OnDismiss.HasDelegate)
            {
                <button @onclick="OnDismiss" 
                        class="inline-flex items-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                        data-testid="@DismissTestId">
                    Dismiss
                </button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string ErrorMessage { get; set; } = "An error occurred";
    [Parameter] public string? Details { get; set; }
    [Parameter] public EventCallback OnRetry { get; set; }
    [Parameter] public EventCallback OnDismiss { get; set; }
    [Parameter] public string RetryTestId { get; set; } = "retry-button";
    [Parameter] public string DismissTestId { get; set; } = "dismiss-button";
    
    private bool isRetrying = false;

    private async Task HandleRetry()
    {
        if (isRetrying) return;
        
        isRetrying = true;
        try
        {
            await OnRetry.InvokeAsync();
        }
        finally
        {
            isRetrying = false;
        }
    }
}