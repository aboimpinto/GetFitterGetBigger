@using GetFitterGetBigger.Admin.Models.Authentication
@using GetFitterGetBigger.Admin.Services.Authentication
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (isLoading)
{
    <div class="flex items-center">
        <div class="animate-pulse h-8 w-8 bg-gray-300 rounded-full"></div>
        <div class="animate-pulse h-4 w-16 bg-gray-300 ml-2 rounded"></div>
    </div>
}
else if (currentUser != null)
{
    <div class="flex items-center">
        @if (!string.IsNullOrEmpty(currentUser.ProfilePictureUrl))
        {
            <img src="@currentUser.ProfilePictureUrl" alt="Profile" class="h-8 w-8 rounded-full" />
        }
        else
        {
            <div class="h-8 w-8 rounded-full bg-gray-500 flex items-center justify-center text-white">
                @(string.IsNullOrEmpty(currentUser.DisplayName) ? "?" : currentUser.DisplayName[0])
            </div>
        }
        
        <div class="ml-2 flex items-center">
            <span class="text-sm text-gray-700 mr-3">@(string.IsNullOrEmpty(currentUser.DisplayName) ? currentUser.Email : currentUser.DisplayName)</span>
            <button @onclick="LogoutUser" class="text-gray-500 hover:text-gray-700" title="Logout">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                </svg>
            </button>
        </div>
    </div>
}
else
{
    <a href="/login" class="text-gray-600 hover:text-gray-900">Login</a>
}

@code {
    private AuthUser? currentUser;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        isLoading = false;
    }

    private async Task LogoutUser()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}
