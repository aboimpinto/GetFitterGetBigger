// <auto-generated />
using System;
using GetFitterGetBigger.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GetFitterGetBigger.API.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    [Migration("20250623233141_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsUnilateral")
                        .HasColumnType("boolean");

                    b.Property<int>("KineticChain")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseEquipment", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid");

                    b.HasKey("ExerciseId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("ExerciseEquipment");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseMetricSupport", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MetricTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("ExerciseId", "MetricTypeId");

                    b.HasIndex("MetricTypeId");

                    b.ToTable("ExerciseMetricSupport");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseMovementPattern", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PatternId")
                        .HasColumnType("uuid");

                    b.HasKey("ExerciseId", "PatternId");

                    b.HasIndex("PatternId");

                    b.ToTable("ExerciseMovementPatterns");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseTargetedMuscle", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MuscleGroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("ExerciseId", "MuscleGroupId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("ExerciseTargetedMuscles");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MetricType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MetricTypes");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MovementPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MovementPatterns");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MuscleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("BodyPart")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.WorkoutLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.WorkoutLogSet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int?>("DistanceCompletedM")
                        .HasColumnType("integer");

                    b.Property<int?>("DurationCompletedSec")
                        .HasColumnType("integer");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int?>("RepsCompleted")
                        .HasColumnType("integer");

                    b.Property<int>("SetOrder")
                        .HasColumnType("integer");

                    b.Property<decimal?>("WeightUsedKg")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("LogId");

                    b.ToTable("WorkoutLogSets");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseEquipment", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Equipment", "Equipment")
                        .WithMany("Exercises")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Exercise", "Exercise")
                        .WithMany("Equipment")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseMetricSupport", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Exercise", "Exercise")
                        .WithMany("SupportedMetrics")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetFitterGetBigger.API.Models.Entities.MetricType", "MetricType")
                        .WithMany("Exercises")
                        .HasForeignKey("MetricTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("MetricType");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseMovementPattern", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Exercise", "Exercise")
                        .WithMany("MovementPatterns")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetFitterGetBigger.API.Models.Entities.MovementPattern", "Pattern")
                        .WithMany("Exercises")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.ExerciseTargetedMuscle", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Exercise", "Exercise")
                        .WithMany("TargetedMuscles")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetFitterGetBigger.API.Models.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("Exercises")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.WorkoutLog", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.User", "User")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.WorkoutLogSet", b =>
                {
                    b.HasOne("GetFitterGetBigger.API.Models.Entities.Exercise", "Exercise")
                        .WithMany("WorkoutLogSets")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GetFitterGetBigger.API.Models.Entities.WorkoutLog", "WorkoutLog")
                        .WithMany("Sets")
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.Equipment", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.Exercise", b =>
                {
                    b.Navigation("Equipment");

                    b.Navigation("MovementPatterns");

                    b.Navigation("SupportedMetrics");

                    b.Navigation("TargetedMuscles");

                    b.Navigation("WorkoutLogSets");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MetricType", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MovementPattern", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.MuscleGroup", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.User", b =>
                {
                    b.Navigation("WorkoutLogs");
                });

            modelBuilder.Entity("GetFitterGetBigger.API.Models.Entities.WorkoutLog", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
